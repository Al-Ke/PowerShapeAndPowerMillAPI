<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Autodesk.WPFControls"
    xmlns:converters="clr-namespace:Autodesk.WPFControls.Converters">

    <Color x:Key="ColorDark">#FF888888</Color>
    <Color x:Key="ColorMid">#FFAAAAAA</Color>
    <Color x:Key="ColorLight">#FFDDDDDD</Color>
    <Color x:Key="BlushColorDark">#FF223B84</Color>
    <Color x:Key="BlushColorMid">#FF57A0F4</Color>
    <Color x:Key="BlushColorLight">#FFB4DCEF</Color>

    <converters:InvertedBooleanToVisibilityConverter x:Key="invertedBooleanToVisibilityConverter" />
    
    <!--DelcamLinkButton Default Style-->
    <Style TargetType="{x:Type local:DelcamLinkButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamLinkButton}">
                    <Grid HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Image x:Name="PART_Image"
                               Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedImage}"
                               Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageHeight}"
                               Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageWidth}" />
                        <Border x:Name="ContentPresenterBorder"
                                BorderThickness="0,0,0,1"
                                BorderBrush="White"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="6,3,6,3">
                            <ContentPresenter x:Name="PART_Content"
                                              TextElement.FontFamily="Arial"
                                              TextElement.Foreground="{TemplateBinding Foreground}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="0,0,0,0"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedContent}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenterBorder"
                                    Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientStop Color="Transparent"
                                                      Offset="0.9" />
                                        <GradientStop Color="{StaticResource BlushColorLight}"
                                                      Offset="0.9" />
                                        <GradientStop Color="{StaticResource BlushColorMid}"
                                                      Offset="0.95" />
                                        <GradientStop Color="{StaticResource BlushColorDark}"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Content"
                                        Property="TextElement.Foreground"
                                        Value="Gray" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger SourceName="PART_Content" Property="Content" Value="{x:Null}">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Content"
                                        Property="Margin"
                                        Value="0" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamButton Default Style-->
    <Style TargetType="{x:Type local:DelcamButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Copy1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="rectangle"
                                   StrokeThickness="2"
                                   RadiusX="7"
                                   RadiusY="7"
                                   Grid.RowSpan="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="{StaticResource ColorLight}" Offset="0"/>
                                    <GradientStop Color="{StaticResource ColorMid}" Offset="0.25"/>
                                    <GradientStop Color="{StaticResource ColorDark}" Offset="0.4"/>
                                    <GradientStop Color="{StaticResource ColorMid}" Offset="0.5"/>
                                    <GradientStop Color="{StaticResource ColorLight}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="lightWhite"
                                   StrokeThickness="2"
                                   RadiusX="7"
                                   RadiusY="7"
                                   Margin="3,2,3,0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" Opacity="0.5" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="highlightBorder" 
                                   Grid.RowSpan="2"
                                   RadiusX="7"
                                   RadiusY="7"
                                   StrokeThickness="3"
                                   Opacity="0.3">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource ColorDark}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle StrokeThickness="1"
                                   RadiusX="7" 
                                   RadiusY="7" 
                                   HorizontalAlignment="Stretch" 
                                   Margin="0,0,0,0" 
                                   VerticalAlignment="Stretch" 
                                   Visibility="Visible"
                                   Grid.RowSpan="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF3E3E3E" Offset="1"/>
                                    <GradientStop Color="#FF666666" Offset="0"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#4CFFFFFF" Offset="0"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid Margin="6"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Grid.RowSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image x:Name="PART_Image"
                                   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedImage}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageHeight}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageWidth}" />
                            <ContentPresenter x:Name="PART_Content"
                                              TextElement.Foreground="{TemplateBinding Foreground}" 
                                              TextElement.FontFamily="Arial"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              RecognizesAccessKey="True" 
                                              Margin="6,3,6,3"
                                              Grid.Row="0"
                                              Grid.Column="1"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedContent}" />
                            <Image x:Name="PART_StatusImage"
                                   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StatusImageSource}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StatusImageHeight}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StatusImageWidth}"
                                   Grid.Column="2" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Storyboard_Copy1_BeginStoryboard" Storyboard="{StaticResource Storyboard_Copy1}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Content"
                                        Property="Grid.Column"
                                        Value="0" />
                                <Setter TargetName="PART_Content"
                                        Property="Grid.Row"
                                        Value="1" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Content"
                                        Property="TextElement.Foreground"
                                        Value="Gray" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger SourceName="PART_Content" Property="Content" Value="{x:Null}">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Content"
                                        Property="Margin"
                                        Value="0" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--NumericUpDown Default Style-->
    <Style TargetType="{x:Type local:DelcamNumericUpDown}">
        <Style.Resources>
            <Style TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DelcamNumericUpDown}}, Path=Background}">
                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  Margin="3,0,3,0" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamNumericUpDown}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                     x:Name="PART_Value"
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Grid.RowSpan="2"
                                     BorderThickness="0"
                                     Background="{TemplateBinding Background}"/>
                            <RepeatButton Command="{x:Static local:DelcamNumericUpDown.IncreaseCommand}"
                                          Grid.Row="0"
                                          Grid.Column="1"
                                          IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">
                                <Path HorizontalAlignment="Center"
                                      x:Name="upArrow"
                                      VerticalAlignment="Center"
                                      Fill="Black"
                                      Data="M 0 4 L 4 0 L 8 4 Z"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static local:DelcamNumericUpDown.DecreaseCommand}"
                                          Grid.Row="1"
                                          Grid.Column="1"
                                          IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">
                                <Path HorizontalAlignment="Center"
                                      x:Name="downArrow"
                                      VerticalAlignment="Center"
                                      Fill="Black"
                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                            </RepeatButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="PART_Value"
                                        Property="TextElement.Foreground"
                                        Value="Gray" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamDesktop Default Style-->
    <Style TargetType="{x:Type local:DelcamDesktop}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamDesktop}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid Visibility="{TemplateBinding IsFullScreenMode, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <local:DelcamButton x:Name="PART_HomeButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/home.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HomeButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsHomeButtonEnabled}">
                                Home
                            </local:DelcamButton>

                            <local:DelcamButton x:Name="PART_SaveButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Grid.Column="1"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/save.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SaveButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSaveButtonEnabled}">
                                Save
                            </local:DelcamButton>

                            <local:DelcamButton x:Name="PART_BackButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Grid.Column="2"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/leftArrow.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsBackButtonEnabled}">
                                Back
                            </local:DelcamButton>

                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedHeader}"
                                              Grid.Column="3"
                                              Margin="2,0,0,0"/>
                            
                            <Image Source="/Autodesk.WPFControls;component/Desktop/Images/AACLogo.png"
                                   Grid.Column="4"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutodeskLogoVisibility}" />

                            <local:DelcamButton x:Name="PART_HelpButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Grid.Column="5"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/help.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HelpButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsHelpButtonEnabled}">
                                Help
                            </local:DelcamButton>

                            <local:DelcamButton x:Name="PART_AboutButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Grid.Column="6"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/about.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AboutButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsAboutButtonEnabled}">
                                About
                            </local:DelcamButton>

                            <local:DelcamButton x:Name="PART_ExitButton"
                                                Width="46"
                                                Height="46"
                                                Margin="2"
                                                Grid.Column="7"
                                                Orientation="Vertical"
                                                ImageHeight="16"
                                                ImageWidth="16"
                                                ImageSource="/Autodesk.WPFControls;component/Desktop/Images/exit.png"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ExitButtonVisibility}"
                                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExitButtonEnabled}">
                                Exit
                            </local:DelcamButton>

                            <Grid Grid.Row="0"
                                  Grid.ColumnSpan="8"
                                  Background="#88FFFFFF"
                                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CoverallVisibility}">
                                <StackPanel Orientation="Vertical"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                    <ProgressBar Width="300"
                                                 Height="25"
                                                 Margin="0,0,0,3"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CoverallProgressValue}" />
                                    <TextBlock TextAlignment="Center"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="16"
                                               Foreground="Black"
                                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CoverallProgressMessage}" />
                                </StackPanel>
                            </Grid>

                        </Grid>

                        <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedContent}"
                                          Grid.Row="1"
                                          Margin="2,0,0,0"/>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedIndex"
                                 Value="0">
                            <Setter TargetName="PART_HomeButton"
                                    Property="IsEnabled"
                                    Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamNavigation Default Style-->
    <Style TargetType="{x:Type local:DelcamNavigation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamNavigation}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Orientation="Vertical"
                                        IsItemsHost="True"/>
                        </ScrollViewer>
                        <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedContent}"
                                          Grid.Column="1" />
                        <StackPanel Background="#19FFFFFF"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavigationPanelCoverVisiblity}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamNavigationButton Default Style-->
    <Style TargetType="{x:Type local:DelcamNavigationButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamNavigationButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource BlushColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard_Copy1">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorMid}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorMid}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorLight}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorLight}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="(Rectangle.Stroke).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="{StaticResource BlushColorDark}"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource ColorDark}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <LinearGradientBrush x:Key="brushNormal"
                                             StartPoint="0,0"
                                             EndPoint="0,1">
                            <GradientStop Color="{StaticResource ColorLight}" Offset="0"/>
                            <GradientStop Color="{StaticResource ColorMid}" Offset="0.25"/>
                            <GradientStop Color="{StaticResource ColorDark}" Offset="0.4"/>
                            <GradientStop Color="{StaticResource ColorMid}" Offset="0.5"/>
                            <GradientStop Color="{StaticResource ColorLight}" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="brushExpanded"
                                             StartPoint="0,0"
                                             EndPoint="0,1">
                            <GradientStop Color="{StaticResource BlushColorLight}" Offset="0"/>
                            <GradientStop Color="{StaticResource BlushColorMid}" Offset="0.25"/>
                            <GradientStop Color="{StaticResource BlushColorDark}" Offset="0.4"/>
                            <GradientStop Color="{StaticResource BlushColorMid}" Offset="0.5"/>
                            <GradientStop Color="{StaticResource BlushColorLight}" Offset="1"/>
                        </LinearGradientBrush>
                    </ControlTemplate.Resources>
                    <Grid Margin="3">
                        <Rectangle StrokeThickness="1"
                                   RadiusX="7" 
                                   RadiusY="7" 
                                   HorizontalAlignment="Stretch" 
                                   Margin="0,0,0,0" 
                                   VerticalAlignment="Stretch" 
                                   Visibility="Visible"
                                   Grid.RowSpan="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF3E3E3E" Offset="1"/>
                                    <GradientStop Color="#FF666666" Offset="0"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#4CFFFFFF" Offset="0"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <StackPanel Orientation="Vertical">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="rectangle"
                                           StrokeThickness="2"
                                           RadiusX="7"
                                           RadiusY="7"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource brushNormal}" />
                                <Rectangle x:Name="lightWhite"
                                   StrokeThickness="2"
                                   RadiusX="7"
                                   RadiusY="7"
                                   Margin="3,2,3,0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="White" Opacity="0.5" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="highlightBorder" 
                                   Grid.RowSpan="2"
                                   RadiusX="7"
                                   RadiusY="7"
                                   StrokeThickness="3"
                                   Opacity="0.3">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{StaticResource ColorDark}" />
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle StrokeThickness="1"
                                   RadiusX="7" 
                                   RadiusY="7" 
                                   HorizontalAlignment="Stretch" 
                                   Margin="0,0,0,0" 
                                   VerticalAlignment="Stretch" 
                                   Visibility="Visible"
                                   Grid.RowSpan="2">
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF3E3E3E" Offset="1"/>
                                            <GradientStop Color="#FF666666" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#4CFFFFFF" Offset="0"/>
                                            <GradientStop Color="#00FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Grid Grid.RowSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="PART_Image"
                                           Grid.Column="0" />
                                    <ContentPresenter x:Name="myHeaderText"
                                                      Grid.Column="1"
                                                      TextElement.Foreground="Black" 
                                                      TextElement.FontFamily="Arial"
                                                      Content="{TemplateBinding Header}"
                                                      Margin="6" />
                                </Grid>
                            </Grid>
                            <ContentPresenter x:Name="myContentPresenter"
                                              Visibility="Collapsed"
                                              Margin="3" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Setter Property="Fill"
                                    TargetName="rectangle"
                                    Value="{StaticResource brushExpanded}" />
                            <Setter Property="Visibility"
                                    TargetName="myContentPresenter"
                                    Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsExpanded" Value="False" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard_Copy1}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="Expander.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="myHeaderText"
                                    Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamFlowControl Default Style-->
    <Style TargetType="{x:Type local:DelcamFlowControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamFlowControl}">
                    <ControlTemplate.Resources>
                        <!-- Fill Brushes -->

                        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0"/>
                                    <GradientStop Color="#CCC" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0"/>
                                    <GradientStop Color="#CCC" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0"/>
                                    <GradientStop Color="#EEE" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0"/>
                                    <GradientStop Color="#EEE" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#FFF" Offset="0.0"/>
                                    <GradientStop Color="#AAA" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#BBB" Offset="0.0"/>
                                    <GradientStop Color="#EEE" Offset="0.1"/>
                                    <GradientStop Color="#EEE" Offset="0.9"/>
                                    <GradientStop Color="#FFF" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

                        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

                        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

                        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

                        <!-- Border Brushes -->

                        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#CCC" Offset="0.0"/>
                                    <GradientStop Color="#444" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#CCC" Offset="0.0"/>
                                    <GradientStop Color="#444" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#777" Offset="0.0"/>
                                    <GradientStop Color="#000" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#444" Offset="0.0"/>
                                    <GradientStop Color="#888" Offset="1.0"/>
                                </GradientStopCollection>
                            </GradientBrush.GradientStops>
                        </LinearGradientBrush>

                        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

                        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

                        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

                        <!-- Miscellaneous Brushes -->
                        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

                        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
                        
                        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="Transparent" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Height" Value="14"/>
                            <Setter Property="Width" Value="14"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Ellipse Name="Ellipse" 
                                                 Fill="{StaticResource NormalBrush}"
                                                 Stroke="{StaticResource NormalBorderBrush}"
                                                 StrokeThickness="1" />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DarkBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type Slider}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Slider}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TickBar Name="TopTick"
                                                     SnapsToDevicePixels="True" 
                                                     Placement="Top"
                                                     Fill="{StaticResource GlyphBrush}"
                                                     Height="4"
                                                     Visibility="Collapsed" />
                                            <Border Name="TrackBackground"
                                                    Margin="0"
                                                    CornerRadius="2" 
                                                    Height="4"
                                                    Grid.Row="1"
                                                    Background="{StaticResource LightBrush}" 
                                                    BorderBrush="{StaticResource NormalBorderBrush}"
                                                    BorderThickness="1" />
                                            <Track Grid.Row="1" Name="PART_Track">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                                  Command="Slider.DecreaseLarge" />
                                                </Track.DecreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                                                </Track.Thumb>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                                  Command="Slider.IncreaseLarge" />
                                                </Track.IncreaseRepeatButton>
                                            </Track>
                                            <TickBar Name="BottomTick"
                                                     SnapsToDevicePixels="True" 
                                                     Grid.Row="2"
                                                     Fill="{TemplateBinding Foreground}"
                                                     Placement="Bottom"
                                                     Height="4"
                                                     Visibility="Collapsed" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="TickPlacement" Value="TopLeft">
                                                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="BottomRight">
                                                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="TickPlacement" Value="Both">
                                                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <DockPanel>
                        <DockPanel.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="{StaticResource ColorLight}" Offset="0"/>
                                    <GradientStop Color="{StaticResource ColorMid}" Offset="0.6"/>
                                    <GradientStop Color="{StaticResource ColorDark}" Offset="0.7"/>
                                    <GradientStop Color="{StaticResource ColorMid}" Offset="0.85"/>
                                    <GradientStop Color="{StaticResource ColorLight}" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </DockPanel.Background>
                        <Slider x:Name="PART_Slider"
                                DockPanel.Dock="Bottom"
                                Margin="6" />
                        <Grid ClipToBounds="True">
                            <Viewport3D x:Name="PART_Viewport"
                                        Grid.Column="0"
                                        Grid.Row="0"
                                        ClipToBounds="True">
                                <Viewport3D.Camera>
                                    <PerspectiveCamera x:Name="PART_Camera"
                                                       Position="0,0,3"
                                                       UpDirection="0,1,0" 
                                                       LookDirection="0,0,-1"
                                                       FieldOfView="100" 
                                                       NearPlaneDistance="0.125"/>
                                </Viewport3D.Camera>
                                <Viewport3D.Children>
                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <DirectionalLight Color="White"
                                                              Direction="1,0,-4" />
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <DirectionalLight Color="White"
                                                              Direction="-1,0,-4" />
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                    <ModelVisual3D x:Name="PART_Items" />
                                </Viewport3D.Children>
                            </Viewport3D>
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DelcamTooltip Default Style-->
    <Style TargetType="{x:Type local:DelcamTooltip}">
        <Setter Property="Opacity" Value="0.85" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamTooltip}">
                    <Grid Background="Transparent"
                          Margin="5" 
                          Width="{TemplateBinding Width}" 
                          Height="{TemplateBinding Height}">
                        <Rectangle Fill="White" 
                                   Height="{TemplateBinding Height}" 
                                   RadiusX="7.5" 
                                   RadiusY="7.5">
                            <Rectangle.BitmapEffect>
                                <DropShadowBitmapEffect ShadowDepth="3"/>
                            </Rectangle.BitmapEffect>
                        </Rectangle>
                        <ContentPresenter Margin="5"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--=DelcamTextBox Default Style-->
    <Style TargetType="{x:Type local:DelcamTextBox}"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamTextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" To="0.33"
			  	                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="txtCue"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.4"
			  	                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="txtCue"/>
                        </Storyboard>
                        <Storyboard x:Key="enterNotEmpty">
                            <DoubleAnimation Duration="0:0:0.2"
                                             From="0.33"
                                             To="0"
			  	                             Storyboard.TargetProperty="Opacity" 
                                             Storyboard.TargetName="txtCue"/>
                        </Storyboard>
                        <Storyboard x:Key="exitNotEmpty">
                            <DoubleAnimation Duration="0:0:0.4"
			  	                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="txtCue"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="borBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <Viewbox x:Name="vbxSearchIcon"
                                     Width="{TemplateBinding ActualHeight}"
                                     Height="{TemplateBinding ActualHeight}">
                                <Canvas Width="25"
                                        Height="25">
                                    <Line Canvas.Top="10"
                                          Canvas.Left="10"
                                          Stroke="DarkGray"
                                          StrokeThickness="2"
                                          X1="0"
                                          Y1="0"
                                          X2="10"
                                          Y2="10"
                                          Height="10"
                                          Width="10" />
                                    <Ellipse Width="11"
                                             Height="11"
                                             Canvas.Top="5"
                                             Canvas.Left="5"
                                             StrokeThickness="2"
                                             Stroke="DarkGray"
                                             Fill="White"/>
                                </Canvas>
                            </Viewbox>
                            <Grid>
                                <Decorator x:Name="PART_ContentHost"
                                           VerticalAlignment="Center"
                                           Margin="3" />
                                <TextBlock x:Name="txtCue"
                                           Text="{TemplateBinding TextBoxCue}"
                                           IsHitTestVisible="False"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Margin="6,0,0,0">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{StaticResource BlushColorMid}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEmpty" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsEmpty" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterNotEmpty}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitNotEmpty}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled"
								 Value="False">
                            <Setter TargetName="borBorder"
									Property="Background"
									Value="{StaticResource ColorMid}"/>
                            <Setter Property="Foreground"
									Value="{StaticResource ColorLight}"/>
                        </Trigger>
                        
                        <Trigger Property="IsSearchBox" Value="False">
                            <Setter TargetName="vbxSearchIcon"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>

                        <!-- Width -->
                        <Trigger Property="Width"
								 Value="Auto">
                            <Setter Property="MinWidth"
									Value="100"/>
                        </Trigger>
                        <!-- Height -->
                        <Trigger Property="Height"
								 Value="Auto">
                            <Setter Property="MinHeight"
									Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DelcamEditBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DelcamEditBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <TextBox x:Name="MaskTextBox" 
                                     Visibility="Hidden"
                                     Foreground="Gray"
                                     Background="White"
                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaskText, Mode=OneWay}" />
                            <TextBox Foreground="Black"
                                     Background="Transparent"
                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisplayText, Mode=OneWay}" />
                            <TextBox x:Name="PART_InputTextBox"
                                     Background="Transparent"
                                     Foreground="Transparent"
                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_InputTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="MaskTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
